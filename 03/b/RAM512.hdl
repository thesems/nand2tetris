// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address[0..2], a=reg1, b=reg2, c=reg3, d=reg4, e=reg5, f=reg6, g=reg7, h=reg8);
    
    And(a=load, b=reg1, out=load1);
    And(a=load, b=reg2, out=load2);
    And(a=load, b=reg3, out=load3);
    And(a=load, b=reg4, out=load4);
    And(a=load, b=reg5, out=load5);
    And(a=load, b=reg6, out=load6);
    And(a=load, b=reg7, out=load7);
    And(a=load, b=reg8, out=load8);

    RAM64(in=in, load=load1, address=address[3..8], out=out1);
    RAM64(in=in, load=load2, address=address[3..8], out=out2);
    RAM64(in=in, load=load3, address=address[3..8], out=out3);
    RAM64(in=in, load=load4, address=address[3..8], out=out4);
    RAM64(in=in, load=load5, address=address[3..8], out=out5);
    RAM64(in=in, load=load6, address=address[3..8], out=out6);
    RAM64(in=in, load=load7, address=address[3..8], out=out7);
    RAM64(in=in, load=load8, address=address[3..8], out=out8);

    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[0..2], out=out);
}